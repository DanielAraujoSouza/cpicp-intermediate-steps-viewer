extends layout

mixin cloudOptions
  option(value='') Select a cloud
  each op in clouds
    option(value=op)= op

block script 
  //script(src='https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.module.min.js')
  //script(src='https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js')
  //script(type='module' src='/javascripts/viewer.js')
  script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.min.js')
  // Gif maker
  script(src='/javascripts/gif.js/gif.js')
  script(type='module' src='/javascripts/index.js')

block main
  .row.vw-100.m-0
    #side-bar.col-4.w-25.p-3
      .bg-light.bg-gradient.p-2.mb-2
        h4.text-primary CP-ICP Intermediate Steps Viewer
      #alertContainer.row
      form#cpip-form
        #accordionConfig.accordion
          .accordion-item
            h2#headingClouds.accordion-header
              button.accordion-button(type='button' 
                data-bs-toggle='collapse' 
                data-bs-target='#collapseClouds' 
                aria-expanded='true' 
                aria-controls='collapseClouds') Input Clouds
            #collapseClouds.accordion-collapse.collapse.show(aria-labelledby='headingClouds')
              .accordion-body
                .row.mb-2
                  .col
                    .form-floating          
                      select#src-cloud-select.form-select.form-select-sm(name='src'
                        aria-label='Source Cloud Input')
                        +cloudOptions
                      label(for='src-cloud-select') Source cloud
                .row.mb-2
                  .col
                    .form-floating          
                        select#tgt-cloud-select.form-select.form-select-sm(name='tgt'
                          aria-label='Target Cloud Input')
                          +cloudOptions
                        label(for='tgt-cloud-select') Target cloud
          .accordion-item
            h2#headingCpIcp.accordion-header
              button.accordion-button.collapsed(type='button' 
                data-bs-toggle='collapse' 
                data-bs-target='#collapseCpIcp' 
                aria-expanded='false' 
                aria-controls='collapseCpIcp') CP-ICP Parameters
            #collapseCpIcp.accordion-collapse.collapse(aria-labelledby='headingCpIcp')
              .accordion-body
                .row.mb-2
                  .col
                    .form-floating  
                      input#np-cpip.form-control.form-control-sm(type='number'
                        name='np'
                        min='2'
                        max='30'
                        placeholder='Number of partitions'
                        aria-label='Number of partitions')
                      label(for='np-cpip') Number of partitions
                
                .row.mb-2
                  .col
                    .form-floating  
                      input#rmse-cpicp.form-control.form-control-sm(type='number'
                        name='rmse'
                        min='0'
                        max='30'
                        step='0.000001'
                        placeholder='Stop criteria (RMSE)'
                        aria-label='Stop criteria (RMSE)') 
                      label(for='rmse-cpicp') Stop criteria (RMSE)

                .row.mb-2
                  label(for='btnradio1') Partitioning axis
                  #axis-group.btn-group(role='group')
                    input#axisradio1.btn-check(type='radio' 
                      name='axis' 
                      autocomplete='off'
                      value='x' 
                      checked)
                    label.btn.btn-outline-primary(for='axisradio1') x
                    input#axisradio2.btn-check(type='radio' 
                      name='axis' 
                      autocomplete='off'
                      value='y')
                    label.btn.btn-outline-primary(for='axisradio2') y
                    input#axisradio3.btn-check(type='radio' 
                      name='axis' 
                      autocomplete='off'
                      value='z')
                    label.btn.btn-outline-primary(for='axisradio3') z
          .accordion-item
            h2#headingIcp.accordion-header
              button.accordion-button.collapsed(type='button' 
                data-bs-toggle='collapse' 
                data-bs-target='#collapseIcp' 
                aria-expanded='false' 
                aria-controls='collapseIcp') ICP Parameters
            #collapseIcp.accordion-collapse.collapse(aria-labelledby='headingIcp')
              .accordion-body
                .row.mb-2
                  .col
                    .form-floating  
                      input#delta-icp.form-control.form-control-sm(type='number'
                        name='delta'
                        step='0.000001'
                        min='0'
                        max='30'
                        placeholder='ICP stop criteria (delta)'
                        aria-label='ICP stop criteria (delta)')
                      label(for='delta-icp') ICP stop criteria (delta)
                
                .row.mb-2
                  .col
                    .form-floating  
                      input#max-dist-icp.form-control.form-control-sm(type='number'
                        name='max-dist'
                        min='0'
                        step='0.000001'
                        placeholder='Max distance between points'
                        aria-label='Max distance between points') 
                      label(for='max-dist-icp') Max distance between points
                
                .row.mb-2
                  .col
                    .form-floating  
                      input#num-iter-icp.form-control.form-control-sm(type='number'
                        name='k'
                        min='2'
                        step='1'
                        placeholder='Number of iterations'
                        aria-label='Number of iterations') 
                      label(for='num-iter-icp') Number of iterations
                
                .row.mb-2
                  label(for='closest-type-bf') Nearest point algorithm
                  #closest-type-group.btn-group(role='group')
                    input#closest-type-bf.btn-check(type='radio' 
                    name='closest-type' 
                    autocomplete='off' 
                    value='bf'
                    checked)
                    label.btn.btn-outline-primary(for='closest-type-bf') Brute Force
                    input#closest-type-Tree.btn-check(type='radio' 
                    name='closest-type' 
                    autocomplete='off' 
                    value='tree')
                    label.btn.btn-outline-primary(for='closest-type-Tree') Tree
        .d-flex.justify-content-center.my-3
          button#startBtn.btn.btn-primary(form="cpip-form")
            i.fas.fa-play.me-2
            span Run CP-ICP

      #resultContainer.row.visually-hidden
        #resultHead.d-flex.align-items-center.bg-light.mb-3
          h5.ms-2.my-2.me-auto CP-ICP Result
          #resultSpiner.spinner-border.spinner-border-sm.ms-auto.visually-hidden.link-secondary(role='status')
          button#makeGif.btn.p-2.link-secondary.visually-hidden(title="Make GIF")
            i.fas.fa-film
          button#resultReset.btn.p-2.link-secondary(title="Reset simulation")
            i.fas.fa-redo
        #resultBody.d-block.list-group
        
    .col-8.w-75.sticky-top.vh-100
      #canvas.h-100
      